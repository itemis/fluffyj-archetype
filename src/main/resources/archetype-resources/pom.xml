<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>

    <name>Add a fluffy name here</name>
    <description>Add a fluffy description here</description>

    <packaging>jar</packaging>

    <licenses>
        <license>
            <name>License name goes here</name>
            <url>some.url.to.the.license</url>
            <distribution>manual</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>DevId</id>
            <name>Full name</name>
            <organization>Optional organization</organization>
            <organizationUrl>some.organization.url</organizationUrl>
            <email>some@email.address</email>
            <timezone>Europe/Berlin</timezone>
            <url>dev's website</url>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:url.to.git.repo</connection>
        <developerConnection>scm:git:url.to.git.repo</developerConnection>
        <tag>HEAD</tag>
        <url>url.to.git.repo</url>
    </scm>

    <organization>
        <name>organization's name</name>
        <url>organization.url</url>
    </organization>

    <url>project.website</url>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.release>11</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- Only required for java < 9 <maven.compiler.source>${java.version}</maven.compiler.source> 
            <maven.compiler.target>${java.version}</maven.compiler.target> -->
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
        <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
        <maven-compiler-plugin.version>3.10.0</maven-compiler-plugin.version>
        <maven-exec-plugin.version>3.0.0</maven-exec-plugin.version>
        <maven-help-plugin.version>3.2.0</maven-help-plugin.version>
        <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
        <build.timestamp.formatted>${maven.build.timestamp}</build.timestamp.formatted>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm.ssZ</maven.build.timestamp.format>
        <!-- Make sure we can use variables like ${variable.name} in resource 
            files. These will be expanded by the maven build as soon as the resources 
            plugin processes all contents of the configured resources directories. -->
        <resource.delimiter>${*}</resource.delimiter>
        <guava.version>31.1-jre</guava.version>
        <mockito.version>4.3.1</mockito.version>
        <hamcrest.version>2.2</hamcrest.version>
        <!-- Be aware: Spotbugs seems incompatible to JDK < 17 since 4.4.2 -->
        <!-- See also profiles section -->
        <spotbugs.plugin.version>4.5.3.0</spotbugs.plugin.version>
        <spotbugs.version>4.5.3</spotbugs.version>
        <junit.version>5.8.2</junit.version>
        <jacoco.plugin.version>0.8.7</jacoco.plugin.version>
        <git-commit-id-plugin.version>5.0.0</git-commit-id-plugin.version>
        <assertj.version>3.22.0</assertj.version>
        <logback.version>1.2.10</logback.version>
        <equalsverifier.version>3.9</equalsverifier.version>
        <awaitility.version>4.1.1</awaitility.version>
        <wiremock.version>2.32.0</wiremock.version>
        <arch.unit.version>0.23.1</arch.unit.version>
        <!-- Disable class data sharing (CDS) to avoid a nasty JVM warning. -->
        <!-- This usually has only a very small impact on performance and 
            memory usage. -->
        <!-- See https://stackoverflow.com/a/57957031 -->
        <!-- See https://kupczynski.info/2018/05/29/jvm-class-data-sharing.html -->
        <custom.jvm.options>-Xshare:off</custom.jvm.options>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <!-- Required to support null annotation checks according 
                    to JSR-305 -->
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs</artifactId>
                <version>${spotbugs.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.tngtech.archunit/archunit-junit5 -->
            <dependency>
                <groupId>com.tngtech.archunit</groupId>
                <artifactId>archunit-junit5</artifactId>
                <version>${arch.unit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/nl.jqno.equalsverifier/equalsverifier -->
            <dependency>
                <groupId>nl.jqno.equalsverifier</groupId>
                <artifactId>equalsverifier</artifactId>
                <version>${equalsverifier.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.awaitility/awaitility -->
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://search.maven.org/search?q=a:wiremock-jre8 -->
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock-jre8</artifactId>
                <version>${wiremock.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <!-- Required to support null annotation checks according to 
                JSR-305 -->
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- End of test dependencies -->
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-unit-tests</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>jacoco-site</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>report</goal>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>CLASS</element>
                                        <excludes>
                                            <exclude>*Test</exclude>
                                        </excludes>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>80%</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.github.git-commit-id</groupId>
                    <artifactId>git-commit-id-maven-plugin</artifactId>
                    <version>${git-commit-id-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <mainClass>${package}.App</mainClass>
                            </manifest>
                            <manifestEntries>
                                <Automatic-Module-Name>${package}</Automatic-Module-Name>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <release>${maven.compiler.release}</release>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${maven-exec-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-help-plugin</artifactId>
                    <version>${maven-help-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>show-profiles</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>active-profiles</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- <plugin> <groupId>io.github.git-commit-id</groupId> <artifactId>git-commit-id-maven-plugin</artifactId> 
                <executions> <execution> <goals> <goal>revision</goal> </goals> </execution> 
                </executions> <configuration> <verbose>false</verbose> <excludeProperties> 
                <excludeProperty>git.user.*</excludeProperty> <excludeProperty>git.build.user.*</excludeProperty> 
                <excludeProperty>git.closest.tag.*</excludeProperty> <excludeProperty>git.commit.message.*</excludeProperty> 
                <excludeProperty>git.commit.user.*</excludeProperty> </excludeProperties> 
                <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat> <generateGitPropertiesFile>true</generateGitPropertiesFile> 
                <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename> 
                </configuration> </plugin> -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- When specifying <reuseForks>false</reuseForks> together 
                        with <forkCount>1</forkCount>, the tests are going to run directly inside 
                        the mvn JVM. This means, the ${argLine} cannot be passed to this JVM anymore, 
                        because it is already running. If you want to use these specific settings, 
                        the solution is to use MAVEN_OPTS="\-\-add-modules .. mvn clean verify". -->
                    <reuseForks>true</reuseForks>
                    <forkCount>1</forkCount>
                    <!-- $argLine is 'injected' by JaCoCo and contains instructions 
                        to setup its agent -->
                    <argLine>${argLine}</argLine>
                    <argLine>${custom.jvm.options}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <!-- For warnings about illegal reflective access see https://issues.apache.org/jira/browse/GROOVY-8339 -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <!-- We are not using built-in java support. Instead, we 
                    are explicitly calling the java binary. This gives us the opportunity to 
                    pass JVM arguments. Otherwise those arguments would have been passed to the 
                    JVM running the maven process which then calls this plugin. -->
                <configuration>
                    <executable>java</executable>
                    <commandlineArgs>-jar
                        ${project.build.directory}/${project.build.finalName}.jar</commandlineArgs>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <!-- Show active profiles during build -->
            <plugin>
                <artifactId>maven-help-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>JDK16_or_earlier</id>
            <activation>
                <jdk>(,17)</jdk>
            </activation>
            <dependencies>
                <dependency>
                    <!-- Required to support null annotation checks according 
                        to JSR-305 -->
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs</artifactId>
                    <version>4.2.0</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>4.2.0</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>mvn33</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Required due to switch from Eclipse Aether to 
                            Maven Artifact Resolver since 3.5.0 -->
                        <!-- See https://jaxenter.com/apache-maven-3-5-0-nothing-see-3-4-0-move-along-133180.html -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>2.22.2</version>
                        </plugin>
                        <!-- Required due to switch from Eclipse Aether to 
                            Maven Artifact Resolver since 3.5.0 -->
                        <!-- See https://jaxenter.com/apache-maven-3-5-0-nothing-see-3-4-0-move-along-133180.html -->
                        <plugin>
                            <artifactId>maven-install-plugin</artifactId>
                            <dependencies>
                                <dependency>
                                    <groupId>org.apache.maven</groupId>
                                    <artifactId>maven-resolver-provider</artifactId>
                                    <version>3.5.0</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>create_uber_jar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <configuration>
                            <!-- In some cases this could cause the resulting 
                                jar to malfunction. Set it to 'false' if this happens. -->
                            <!-- If this causes a warning, see: https://issues.apache.org/jira/browse/MSHADE-366 -->
                            <minimizeJar>true</minimizeJar>
                            <transformers>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${package}.App</mainClass>
                                </transformer>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                                    <addHeader>false</addHeader>
                                </transformer>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                            </transformers>
                            <!-- Shading breaks module encapsulation anyway, 
                                see: https://stackoverflow.com/questions/51751981/why-does-maven-shade-plugin-remove-module-info-class -->
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>**/module-info.class</exclude>
                                        <!-- Only specify this if you are 
                                            sure that no dependency requires the settings from its own MANIFEST.MF file -->
                                        <exclude>META-INF/MANIFEST.MF</exclude>
                                        <!-- filter out signature files from 
                                            signed dependencies, else repackaging fails with security exception -->
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>ch.qos.logback:logback-core</artifact>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                </filter>
                            </filters>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create_uber_jar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <shadedArtifactAttached>true</shadedArtifactAttached>
                                    <shadedClassifierName>${current.os}</shadedClassifierName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
